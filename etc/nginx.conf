upstream crfpa-docker {
  server unix:///srv/crfpa-docker/app/run/wsgi.sock;
}

server {
  listen 80;
  listen [::]:80;
  server_name e-learning.crfpa.pre-barreau.com;

  return 301 https://$server_name$request_uri; #redirect HTTP to HTTPS
}

server {
  include ssl.conf;
    ssl_certificate /etc/letsencrypt/live/e-learning.crfpa.pre-barreau.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/e-learning.crfpa.pre-barreau.com/privkey.pem; # managed by Certbot

  server_name e-learning.crfpa.pre-barreau.com; 

  #access_log /var/log/nginx/e-learning.crfpa.pre-barreau.com-access.log;
  access_log off;
  error_log  /var/log/nginx/e-learning.crfpa.pre-barreau.com-error.log;

  charset utf-8;
  client_max_body_size 4096M;

  root /var/www/html/;
  
  location / {
    if (-f $document_root/maintenance/index.html) {
      return 503;
    }
    uwsgi_pass crfpa-docker;
    include uwsgi_params;
    uwsgi_read_timeout 60s; 
    uwsgi_send_timeout 60s;
  }

  error_page 503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /maintenance/index.html break;
  }

  location /ws/ {
    proxy_pass http://localhost:9004/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
  }

  location /media/ {
    alias /srv/crfpa-docker/var/media/;
  }

  location /media/Pre-Barreau/ {
    alias /srv/crfpa-docker/var/media/Pre-Barreau/;
    limit_rate_after 16m;
    limit_rate 256k;
    #internal;
  }

  location /media/items/ {
    alias /srv/crfpa-docker/var/media/items/;
    internal;
  }


  location /static/ {
    alias /srv/crfpa-docker/var/static/;
  }

  location /favicon.ico {
    alias /srv/crfpa/var/static/telemeta/images/favicon.ico;
  }

  location /robots.txt {
    return 200 "User-agent: *\nDisallow: /";
  }

  location /room {
        deny all;
        return 404;
  }
}
